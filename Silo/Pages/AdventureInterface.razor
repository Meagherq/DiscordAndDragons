@page "/adventureinterface"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject ProtectedSessionStorage ProtectedSessionStore
@inject NavigationManager MyNavigationManager

<h3>Adventure Interface</h3>

<MudGrid>
    <MudItem xs="12" md="8">
        <h4>Adventure Map</h4>
        @if(map is not null){
            @for (var x = 0; x < _adventureIdMap.GetLength(0); x++)
            {
                <div style="flex:auto;width:auto;margin:0px">
                @for (var y = 0; y < _adventureIdMap.GetLength(1); y++)
                {
                    var id = _adventureIdMap[x, y];
                    @if (id is not null && currentPlayerLocation is not null && id.ToString() == currentPlayerLocation)
                    {
                        <div style="height: 20px;width: 20px;background-color: green;float:left;margin:0px"></div>
                    }
                    else if (id is not null && _discoveredRooms.Contains(id.Value))
                    {
                        <div style="height: 20px;width: 20px;background-color: black;float:left;margin:0px"></div>
                    }
                    else
                    {
                        <div style="height: 20px;width: 20px;background-color: white;float:left;margin:0px"></div>
                    }
                }
                </div>
                <br />
            }
        }
    </MudItem>
    <MudItem xs="12" md="4">
        <MudText Class="pb-4">Current Players</MudText>
        <MudTable Items=@_players Hover="true" Breakpoint="Breakpoint.Sm" AllowUnsorted=true
                  Context="product" Dense=true FixedHeader=true RowsPerPage=10 SortLabel="Sort By" Outlined="true">
            <HeaderContent>
                <MudTh>Name</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Name">@product.Name</MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager />
            </PagerContent>
        </MudTable>
    </MudItem>
</MudGrid>

<MudGrid>
    <MudItem xs="12" md="8">
        <MudText Class="pb-4">
            @if (@playResponse is not null)
            {
                @foreach (string line in playResponse?.Split('\n'))
                {
                    @line
                    <br />
                }
            }
        </MudText>
    </MudItem>
    <MudItem xs="12" md="4">
        <MudText Class="pb-4">Move Commands</MudText>
        <MudGrid>
            <MudItem xs="12" md="12">
                <MudButton @onclick="() => PlayerCommand(Grains.Enums.PlayerCommands.north)" Color=Color.Tertiary Variant=Variant.Filled Style="margin-left:25%"
                            Size=Size.Large Disabled=@northEnabled>North</MudButton>
            </MudItem>
        </MudGrid>
        <MudGrid>
            <MudItem xs="12" md="6">
                <MudButton @onclick="() => PlayerCommand(Grains.Enums.PlayerCommands.west)" Color=Color.Tertiary Variant=Variant.Filled
                           Size=Size.Large Disabled=@westEnabled>West</MudButton>

            </MudItem>
            <MudItem xs="12" md="6">
                <MudButton @onclick="() => PlayerCommand(Grains.Enums.PlayerCommands.east)" Color=Color.Tertiary Variant=Variant.Filled
                           Size=Size.Large Disabled=@eastEnabled>East</MudButton>
            </MudItem>
        </MudGrid>
        <MudGrid>
            <MudItem xs="12" md="12">
                <MudButton @onclick="() => PlayerCommand(Grains.Enums.PlayerCommands.south)" Color=Color.Tertiary Variant=Variant.Filled Style="margin-left:25%"
                           Size=Size.Large Disabled=@southEnabled>South</MudButton>
            </MudItem>
        </MudGrid>
    </MudItem>
</MudGrid>
<MudGrid>
    <MudItem xs="12" md="8">
        <MudText Class="pb-4">Player Commands</MudText>
        <MudItem xs="12" md="12">
            <MudButton @onclick="() => PlayerCommand(Grains.Enums.PlayerCommands.look)" Color=Color.Tertiary Variant=Variant.Filled Style="width:200px;margin-left:10%"
                        Size=Size.Large>Look</MudButton>
            <MudButton @onclick="() => PlayerCommand(Grains.Enums.PlayerCommands.kill)" Color=Color.Tertiary Variant=Variant.Filled Style="width:200px;margin-left:10%"
                        Size=Size.Large>Kill</MudButton>
            <MudButton @onclick="() => PlayerCommand(Grains.Enums.PlayerCommands.drop)" Color=Color.Tertiary Variant=Variant.Filled Style="width:200px;margin-left:10%"
                    Size=Size.Large>Drop</MudButton>
        </MudItem>
        <br />
        <MudItem xs="12" md="12">
            <MudButton @onclick="() => PlayerCommand(Grains.Enums.PlayerCommands.take)" Color=Color.Tertiary Variant=Variant.Filled Style="width:200px;margin-left:10%"
                        Size=Size.Large>Take</MudButton>
            <MudButton @onclick="() => PlayerCommand(Grains.Enums.PlayerCommands.inventory)" Color=Color.Tertiary Variant=Variant.Filled Style="width:200px;margin-left:10%"
                        Size=Size.Large>Inventory</MudButton>
            <MudButton @onclick="() => PlayerCommand(Grains.Enums.PlayerCommands.measure)" Color=Color.Tertiary Variant=Variant.Filled Style="width:200px;margin-left:10%"
                        Size=Size.Large>Measure</MudButton>
        </MudItem>
    </MudItem>
</MudGrid>
